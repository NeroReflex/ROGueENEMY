name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    container: fedora:latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          dnf update -y
          dnf install -y git cmake gcc-c++ make libconfig-devel libevdev-devel
      - name: Create build dir
        run: |
          mkdir build
          cd build
      - name: Configure CMake
        run: | 
          cd build
          cmake ..
      - name: Build
        run: | 
          cd build
          cmake --build .
      # - name: Create Tag
      #   if: github.ref == 'refs/heads/main'
      #   run: |
      #     TAG_NAME="v$(date +'%Y.%m.%d-%H.%M')"
      #     echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
      #     git tag $TAG_NAME
      #     git push origin $TAG_NAME
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check Git Configuration
        run: |
          git status
          git config --list
        working-directory: /github/workspace
      - name: Create Tag
        run: |
          TAG_NAME="v$(date +'%Y.%m.%d-%H.%M')"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git -C /github/workspace tag $TAG_NAME
          git -C /github/workspace push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check current directory
        run: pwd
      - name: List contents
        run: ls -la
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: LLG rogue-enemy
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/rogue-enemy
          asset_name: rogue-enemy
          asset_content_type: application/octet-stream
